import cv2
import numpy as np

big_img = cv2.imread("Advanced Colours and Shapes.png", 1)
#monkey_img = cv2.imread("monkey.png", 1)

# define green value range
big_img_hsv = cv2.cvtColor(big_img, cv2.COLOR_BGR2HSV)
mask = cv2.inRange(big_img_hsv, (36, 0, 0), (70, 255,255))

# find the contours in the mask
img, contours, hierarchy = cv2.findContours(mask.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# find the contour with max area
cnt = sorted(contours, key=cv2.contourArea, reverse=True)[0]
# cv2.drawContours(big_img, [cnt], 0, (0,0,255), 3)

# Find the bounding box in that region
x,y,w,h = cv2.boundingRect(cnt)
rect = (x, y), (x + w, y + h)
#cv2.rectangle(big_img,(x,y),(x+w,y+h),(0,255,0),2)

# Put the monkey to that region
img_height, img_width = monkey_img.shape[:2] 

# you like to put the monkey image to the center of this region
center_x = int(round(x + w / 2))
center_y = int(round(y + h / 2))
# so the starting point should be 
start_x = int(round(center_x - img_width / 2))
start_y = int(round(center_y - img_height / 2))

mask_img = np.where(monkey_img==[0,0,0])

# Grap information from original image
crop_from_original = big_img[start_y: start_y + img_height, start_x: start_x+img_width ] 

# put the pixel to monkey image
monkey_img[mask_img] =  crop_from_original[mask_img]

# put the monkey to the right image
big_img[start_y:start_y+img_height,start_x: start_x+img_width]=monkey_img

cv2.imshow("big_img", big_img)
cv2.waitKey()