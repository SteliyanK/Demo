import cv2
import numpy as np
from matplotlib import pyplot as plt

# reading image
img = cv2.imread('Colours.png')
  
# converting image into grayscale image
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
  
# setting threshold of gray image
_, threshold = cv2.threshold(gray, 127, 255, cv2.THRESH_BINARY)
  
# using a findContours() function
contours, _ = cv2.findContours(
    threshold, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
  
i = 0
hsv_frame = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
while True:
    for contour in contours:

        approx = cv2.approxPolyDP(
            contour, 0.01 * cv2.arcLength(contour, True), True)

        cv2.drawContours(img, [contour], 0, (0, 0, 0), 0)

        M = cv2.moments(contour)
        if M['m00'] != 0.0:
            x = int(M['m10']/M['m00'])
            y = int(M['m01']/M['m00'])
        
        # Pick pixel value
        pixel_center = hsv_frame[y, x]
        hue_value = pixel_center[0]
        color = "Undefined"
        if hue_value < 5:
            color = "RED"
        elif 0 < hue_value < 33:
            color = "YELLOW"
        elif hue_value < 99:
            color = "GREEN"
        elif hue_value < 170:
            color = "BLUE"
        else:
            color = "RED"
    
        # putting shape name at center of each shape
        if len(approx) == 3:
            cv2.putText(img, color + "triangle", (x, y),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 255, 255), 2)
            #cv2.circle(img, (x, y), 5, (255, 255, 255), -1)

  
        elif len(approx) == 4:
            cv2.putText(img, color + "rectangle", (x, y),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 255, 255), 2)
            #cv2.circle(img, (x, y), 5, (255, 255, 255), -1)

  
        elif len(approx) == 5:
            cv2.putText(img, color + "pentagon", (x, y),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 255, 255), 2)
            #cv2.circle(img, (x, y), 5, (255, 255, 255), -1)

  
        elif len(approx) == 6:
            cv2.putText(img, color + "hexagon", (x, y),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 255, 255), 2)
            #cv2.circle(img, (x, y), 5, (255, 255, 255), -1)

  
        #elif len(approx) == 0:
            #cv2.putText(frame, color, (x, y),
                        #cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 255, 255), 2)
            #cv2.circle(frame, (x, y), 5, (255, 255, 255), -1)
    
    
        pixel_center_bgr = img[y, x]
        b, g, r = int(pixel_center_bgr[0]), int(pixel_center_bgr[1]), int(pixel_center_bgr[2])
        #cv2.rectangle(frame, (x - 220, 10), (x + 200, 120), (255, 255, 255), -1)
        #cv2.putText(frame, color, (x - 200, 100), 0, 3, (b, g, r), 5)
        #cv2.circle(frame, (x, y), 5, (25, 25, 25), 3)
    cv2.imshow("Frame", img)
    key = cv2.waitKey(1)
    if key == 27:
        break

cv2.imshow('shapes', img)
  
cv2.waitKey(0)
cv2.destroyAllWindows()